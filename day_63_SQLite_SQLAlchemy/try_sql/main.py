import sqlite3
from flask import Flask
from flask_sqlalchemy import SQLAlchemy

# SQL #

# db = sqlite3.connect('books-collection.db')
#
# cursor = db.cursor()

# cursor.execute("CREATE TABLE books ("
#                "id INTEGER PRIMARY KEY, "
#                "title varchar(250) NOT NULL UNIQUE, "
#                "author varchar (250) NOT NULL, "
#                "rating FLOAT NOT NULL)")

# cursor.execute("INSERT INTO books VALUES (1, 'Harry Potter', 'J. K. Rowling', '9.3')")
# db.commit()

# SQLAlchemy #

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///new-books-collection.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)


class Books(db.Model):
    id = db.Column(db.Integer, primary_key=True)  # autogenerated
    title = db.Column(db.String(250), unique=True, nullable=False)
    author = db.Column(db.String(250), nullable=False)
    rating = db.Column(db.Float, nullable=False)

    def __repr__(self):
        return f"<Books {self.title!r}>"


book = Books(title='Harry Potter', author='J. K. Rowling', rating='9.3')  # make an entry(row)

db.create_all()  # create db and table(Books)
db.session.add(book)
db.session.commit()

# CRUD operations #

# Read All Records
print(Books.query.all())
print(Books.query.all()[0].author)
print(db.session.query(Books).all())

# Read a Particular Record
print(Books.query.filter_by(title="Harry Potter").first())

# Update a Record by PRIMARY KEY
book_id = 1
book_to_update = Books.query.get(book_id)
book_to_update.title = "Harry Potter and the Goblet of Fire"
db.session.commit()
print('Updated', Books.query.all())

# Delete by PRIMARY KEY
book_id = 1
book_to_delete = Books.query.get(book_id)
db.session.delete(book_to_delete)
db.session.commit()
print('Deleted', Books.query.all())
