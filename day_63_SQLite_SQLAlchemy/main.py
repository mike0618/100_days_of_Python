from flask import Flask, render_template, request, redirect, url_for
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///books-collection.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)


class Books(db.Model):
    id = db.Column(db.Integer, primary_key=True)  # autogenerated
    title = db.Column(db.String(250), unique=True, nullable=False)
    author = db.Column(db.String(250), nullable=False)
    rating = db.Column(db.Float, nullable=False)

    def __repr__(self):
        return f"<Books {self.title!r}>"


db.create_all()


@app.route('/')
def home():
    all_books = Books.query.all()
    return render_template('index.html', books=all_books)


@app.route("/add", methods=['GET', 'POST'])
def add():
    if request.method == 'POST':
        book = Books()
        book.title = request.form.get('title')
        book.author = request.form.get('author')
        book.rating = request.form.get('rating')
        db.session.add(book)
        db.session.commit()
        return redirect(url_for('home'))
    return render_template('add.html')


@app.route('/edit_rating/<int:b_id>', methods=['GET', 'POST'])
def edit(b_id):
    book = Books.query.get(b_id)
    if request.method == 'POST':
        book.rating = request.form.get('rating')
        db.session.commit()
        return redirect(url_for('home'))
    return render_template('edit_rating.html', book=book)


@app.route('/<int:b_id>')
def delete(b_id):
    book = Books.query.get(b_id)
    db.session.delete(book)
    db.session.commit()
    return redirect(url_for('home'))


if __name__ == "__main__":
    app.run(debug=True)

